from ramка import Ramка, add_ramka
from model import Rebro_Model


class UserInterface:

    # @add_ramka(50,'Выберите действие')
    def user_answer(self):
        print("0 - Предисловие"
              "\n1 - Найти сущестующую деталь."
              "\n    На экран будут выведены детали с размерами близкими к заданной"
              "\n2 - Создать новую деталь"
              "\n3 - Вывести на экран все записи"
              "\n4 - Удалить деталь"
              "\nq - Выйти")
        answer = input("Выберите действие")
        return answer

    @add_ramka(50, "Предисловие")
    def coment(self):
        print("""
        Ребро жесткости - распростаненная деталь сварных констукций. Деталь простая и примитивная.
        Благодаря простоте, конструктору бывает проще и быстрее выпустить новый чертеж, чем искать существующий.
        Но при сходных габаритах изделий и размеры ребер неминуемо должны повториться. 
        Данная программа предназначена для быстрого и легкого поиска нужного ребра среди существующих.
        
        Если ни одна из деталей вам не подошла - вы можете выпустить свой чертеж.
        Когда эта программа будет дополнена модулем, работающим с КОМПАСом, это станет предельно просто
        
        Значение "неуказанные параметры" обозначает, что кроме указанных размеров деталь содержит еще какие-то 
        элементы, не вошедшие в базу.
        В любом случае, если вы нашли нужную вам деталь здесь - отыщите чертеж в базе архива и убедитесь, 
        что это именно та деталь.
        """)

    @add_ramka(50, 'Найти существующие детали')
    def find_rebro(self):
        Ramка(40, " ", " ", "Здесь должна быть ", "пояснительная картинка", " ", " ")
        a, b = tuple(input("Вверите размеры А и Б \n в  одну строку через запятую").split(","))
        # (a, b) = sorted((a, b))
        print(a,b)
        return (a,b)

    @add_ramka(60, "Введите размеры и параметры новой детали")
    def view_add_rebro(self):
        dict_rebro = {
            "Обозначение чертежа": None,
            "A": None,
            "B": None,
            "C": None,
            "S": None,
            "марка": None,
            "не указанные параметры": None
        }
        dict_rebro["Обозначение чертежа"] = input("Введите обозначение чертежа")
        dict_rebro["A"], dict_rebro["B"], dict_rebro["C"] = tuple(
            input("Вверите размеры А,Б,C \n в  одну строку через запятую").split(","))
        dict_rebro["S"] = input("Толщина листа ")
        dict_rebro["марка"] = input("Марка стали (Ст3, Сталь 20, О9Г2С)")
        dict_rebro["не указанные параметры"] = input("Имеются неуказанные параметры Y/N")
        return dict_rebro

    @add_ramka(50, "Удаление ребра")
    def viev_del_rebro_insert(self):
        num = input("Обозначение чертежа")
        return num

# a=UserInterface()
# b=a.view_add_rebro()
# print(b)
